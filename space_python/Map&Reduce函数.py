
# ######################################################################################################################
# Map Reduce函数
# ######################################################################################################################
# 注意这边的map reduce和分布式的没有太大的关系

# 测试函数~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
def func1(x):
    return x * x

def func2(x, y):
    return x + y

# map函数~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# python3中，range(1)&map返回结果为一个迭代器，如果需要生成列表需要加一个list()
# 利用map()函数，可以把一个 list 转换为另一个 list，只需要传入转换函数

# 接受1个迭代参数=======================================
list1 = list(range(1, 11))
test_map1 = list(map(func1, list1))

# 接受2个迭代参数=======================================
list2 = list(range(1, 21))
test_map2 = list(map(func2, list1, list2))   # 按最少的元素来算

# Reduce函数~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
from functools import reduce

test_reduce1 = reduce(func2, range(1, 6))   # (((((1+2)+3)+4)+5))







