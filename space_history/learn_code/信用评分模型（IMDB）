# 信用评分模型（IMDB）

IMDb的算分方式在电影界中算是最客观最公正了，也得到了很多人的推崇。但是很遗憾的是，目前时光网的评分还是简单算平均分的方式。
而IMDb算分方式需要电影的平均分数和打分人数，这两项都是时光网上可以查到数据的，所以笔者心血来潮，想到用IMDb的算分方式来计算时光网Top10的时光分数。

在开始算分之前，先向大家介绍一下IMDb的算分方式。IMDB采用的是“贝叶斯统计法”(true Bayesian estimate)公式为：
   TOP250最终评分 = (v ÷ (v+m)) × R + (m ÷ (v+m)) × C 。
注：R =此电影的平均分数
　　v = 对此电影投票的人数
　　m = 进入TOP250电影的最小投票人数(现固定为25000，但这个数字会变的)
　　C = 目前所有电影平均得分(现固定为7.0，数字也是会变的)
注：以上公式的介绍出自：《黑暗骑士》走下神坛，让出IMDb头把交椅。m和c的固定数据根据现在的IMDb上面的信息作出了符合现在情况的正确的改动。
注：http://i.mtime.com/4014845/blog/7647562/
注：仔细研究这个公式，你会发现，IMDB为每部电影增加了3000张选票，并且这些选票的评分都为6.9。这样做的原因是，假设所有电影都至少有3000张选票，
    那么就都具备了进入前250名的评选条件；然后假设这3000张选票的评分是所有电影的平均得分（即假设这部电影具有平均水准）；
    最后，用现有的观众投票进行修正，长期来看，v/(v+m)这部分的权重将越来越大，得分将慢慢接近真实情况。

把这个公式写成更一般的形式：
    mean(x) = (C*m+add(xi))/(n+C)
注： C，投票人数扩展的规模，是一个自行设定的常数，与整个网站的总体用户人数有关，可以等于每个项目的平均投票数。
     n，该项目的现有投票人数。
     x，该项目的每张选票的值。
　   m，总体平均分，即整个网站所有选票的算术平均值。

注：  这种算法被称为"贝叶斯平均"（Bayesian average）。因为某种程度上，它借鉴了"贝叶斯推断"（Bayesian inference）的思想：既然不知道投票结果，
      那就先估计一个值，然后不断用新的信息修正，使得它越来越接近正确的值。
      在这个公式中，m（总体平均分）是"先验概率"，每一次新的投票都是一个调整因子，使总体平均分不断向该项目的真实投票结果靠近。
      投票人数越多，该项目的"贝叶斯平均"就越接近算术平均，对排名的影响就越小。
      
缺点：
     1. "贝叶斯平均"也有缺点，主要问题是它假设用户的投票是正态分布。比如，电影A有10个观众评分，5个为五星，5个为一星；电影B也有10个观众评分，都给了三星。
     这两部电影的平均得分（无论是算术平均，还是贝叶斯平均）都是三星，但是电影A可能比电影B更值得看。
解决思路：
     解决这个问题的思路是，假定每个用户的投票都是独立事件，每次投票只有n个选项可以选择，那么这就服从"多项分布"（Multinomial distribution），
     就可以结合贝叶斯定理，估计该分布的期望值。由于这涉及复杂的统计学知识，这里就不深入了，
     感兴趣的朋友可以继续阅读William Morgan的How to rank products based on user input。

# R语言实现
imdb <- function(v,m,r,c){
  score <- v/(v+m)*r + m/(v+m)*c
  return(score)
}
imdb(100,1,9,7)
imdb(10,1,9.7,7)

