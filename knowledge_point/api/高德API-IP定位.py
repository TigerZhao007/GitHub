# -*- coding: utf-8 -*-
"""
时间：2019-10-13
作者: zuoshao（佐少）
代码说明：高德API-搜索POI
搜索POI包括：根据用户输入的IP地址，能够快速的帮用户定位IP的所在位置。
"""

# ######################################################################################################################
# 高德地图之python爬取POI数据，查询目标区域当前/未来的天气情况。
# ######################################################################################################################
'''
IP定位是一个简单的HTTP接口，根据用户输入的IP地址，能够快速的帮用户定位IP的所在位置。
适用场景：希望能够将IP信息转换为地理位置信息。
接口说明文档：
https://lbs.amap.com/api/webservice/guide/api/ipconfig
'''

# ######################################################################################################################
# 1、根据用户输入的IP地址，能够快速的帮用户定位IP的所在位置
# ######################################################################################################################

# 指定城市和关键字，拉取高德API数据~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
def get_ip_city(ip='114.247.50.2'):

    # 导入所需要的模块~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    from urllib.parse import quote
    import pandas as pd
    import requests

    # 高德API请求信息设置~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # cityname = '南京', keywords='东升村', page=1
    key = '5a96233309dba9e376adfdae45a02c0a'
    poi_search_url = "https://restapi.amap.com/v3/ip"
    req_url = poi_search_url + "?key=" + key + '&ip=' + quote(ip)

    # 高德API数据请求并解析~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # 访问链接后，api会回传给一个json格式的数据
    data = requests.get(req_url)
    data = data.json()

    # 请求当时天气情况~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    if data['status'] == '1':
        name_list = ['infocode', 'province', 'city', 'adcode', 'rectangle']
        # 请求返回信息解析并提取相关的信息~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        df_data = pd.DataFrame(columns=name_list)

        for name in name_list:
            df_data[name] = [data[name]]

        df_data['ip'] = ip

    # 没有请求结果，返回错误信息~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    else:
        print('没有返回结果！请输入正确的区域！')

    # 函数返回结果~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    return df_data

# ######################################################################################################################
# 主函数
# ######################################################################################################################

# 主函数~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if __name__ == '__main__':
    df_ip_city = get_ip_city(ip='114.247.50.2')


