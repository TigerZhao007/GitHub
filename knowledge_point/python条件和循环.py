
# ######################################################################################################################
# 条件判断和循环
# ######################################################################################################################
'''条件控制：通过一条或多条语句的执行结果（True或者False）来决定执行的代码块。
每个条件后面要使用冒号:，表示接下来是满足条件后要执行的语句块。
使用缩进来划分语句块，相同缩进数的语句在一起组成一个语句块。在Python中没有switch–case语句。
'''

# 条件判断if else ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# if操作
x = 5
if x > 3:
   print("yes")

# if嵌套:if...elif...else
# 也可以把 if...elif...else 结构放在另外一个 if...elif...else 结构中
x = 99
if x < 60:
   print("不及格")
elif x < 80:
   print("良好")
else:
   print("优秀")

# 循环语句while ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# while循环
sum1 = 0
counter = 1
while counter <= 10:
   sum1 = sum1 + counter
   counter += 1
print("1 到 10 之和为: %d" % sum)

# while 循环使用 else 语句
count = 0
while count < 5:
  print(count, " 小于 5")
  count = count + 1
else:
  print(count, " 大于或等于 5")

# 循环语句for ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# for 语句：for循环可以遍历任何序列(列表、字符串等)
str = 'python'
list1 = ['I', 'love', 'python']
print("遍历字符串")
for i in str:
   print(i)
print("遍历列表")
for i in list1:
   print(i)

# range()函数：遍历数字序列，可以使用内置range()函数生成数列
for i in range(5):
   print(i)

# 也可以使用range指定区间的值
for i in range(2, 6):
   print(i)

# 也可以使range以指定数字开始并指定不同的增量(步长),可以是负数
for i in range(0, 10, 3):
   print(i)

for i in range(-10, -100, -30):
   print(i)

# 可以结合range()和len()函数以遍历一个序列的索引
list1 = ['I', 'love', 'Python']
for i in range(len(list1)):
   print(list1[i])

# 跳出循环break ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# break语句：跳出 for 和 while 的循环体
list1 = ['I', 'love', 'Python']
for i in list1:
   if i == 'love':
       break
   print('当前为 :', i)

# 跳出当前循环，进入下一轮循环continue ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# continue语句:跳过当前循环块中的剩余语句，然后继续进行下一轮循环
var = 10
while var > 0:
    var = var -1
    # 变量为 5 时跳过输出
    if var == 5:
       continue
    print('当前值 :', var)
print("hello world!")

# 占位语句：pass语句~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# pass 语句：pass是空语句，是为了保持程序结构的完整性，pass 不做任何事情，一般用做占位语句
while True:
   pass  # 等待键盘中断 (Ctrl+C)




