# -*- coding: utf-8 -*-
"""
时间：2019-11-16
作者: zuoshao（佐少）
代码说明：矩阵运算
"""

# ######################################################################################################################
# 矩阵的创建（Numpy）
# ######################################################################################################################

# 创建矩阵~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'''
python中主要有两种表示矩阵的方法：一类是matrix类，另一类是二维array。
这两种方法主要差别在于默认乘法的不同：
当矩阵是matrix类，默认的乘法是矩阵的乘法；比如A与自身不能相乘，程序报错。
当矩阵是array类，默认乘法是Hadamad乘法，比如B矩阵，元素与对应元素相乘。
在实际中，大多数情况下，我们使用后一种方法，也就是二维array表示矩阵。
'''

# 导入所需的模块
import numpy as np
from numpy.linalg import inv

# 矩阵的创建
A = np.matrix([[1, 2], [3, 4], [5, 6]])
B = np.array(range(1, 7)).reshape(3, 2)

# 矩阵的乘法
# A*A  # 矩阵无法使用A*A
A*A.T  # 矩阵的乘法
B*B  # 点乘

# 创建特殊的矩阵
np.zeros((3, 2))  # 零矩阵
np.identity(3)  # 单位矩阵

# 创建对角矩阵
np.diag([1, 2, 3])

# 矩阵中向量的提取
m = np.array(range(1, 10)).reshape(3, 3)

# 提取行向量
m[[0, 2]]
m[[True, False, True]]

# 提取列向量
m[:, [1, 2]]
m[:, [False, True, True]]

# ######################################################################################################################
# 矩阵的运算（Numpy）
# ######################################################################################################################

# 矩阵运算~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# 导入所需的模块
import numpy as np
from numpy.linalg import inv

# 矩阵的计算
n = np.array(range(1, 5)).reshape(2, 2)

# 矩阵的转置
np.transpose(n)
n.T

# 矩阵的加减运算
n + n
n - n

# 矩阵的倍乘&点乘（点乘）
3 * n
n * n

# 矩阵的乘法（内积）
n.dot(n)

# 矩阵的逆矩阵
inv(n)
np.dot(inv(n), n)

