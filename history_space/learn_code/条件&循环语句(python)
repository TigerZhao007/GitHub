# Python条件语句
Python程序语言指定任何非0和非空（null）值为true，0 或者 null为false。
Python 编程中 if 语句用于控制程序的执行，基本形式为：
...
 if 判断条件1:
      执行语句1……
  elif 判断条件2:
      执行语句2……
  elif 判断条件3:
      执行语句3……
  else:
      执行语句4……
...
...
a=2
b=1
if ( a > 0 ) and ( b / a > 2 ):
    print "yes"
else :
    print "no"
...

# Python循环语句
while 循环	        在给定的判断条件为 true 时执行循环体，否则退出循环体。
for 循环	          重复执行语句
嵌套循环          	你可以在while循环体中嵌套for循环

## Python While 循环语句
Python 编程中 while 语句用于循环执行程序，即在某条件下，循环执行某段程序，以处理需要重复处理的相同任务。
其基本形式为：
...
   while 判断条件：
       执行语句……
...
执行语句可以是单个语句或语句块。判断条件可以是任何表达式，任何非零、或非空（null）的值均为true。
当判断条件假false时，循环结束。
...
numbers = [1,2,3,4,5,6,7,8,9,10]
even = []
odd  = []
while len(numbers)>0:
    number = numbers.pop()
    if(number%2==0):
        even.append(number)
    else:
        odd.append(number)
print(even);print(odd);
...
while 语句时还有另外两个重要的命令 continue，break 来跳过循环.
continue 用于跳过该次循环，break 则是用于退出循环.
此外"判断条件"还可以是个常值，表示循环必定成立.
无限循环你可以使用 CTRL+C 来中断循环.
...
i = 1
while i < 10:   
    i += 1
    if i%2 > 0:     # 非双数时跳过输出
        continue
    print i         # 输出双数2、4、6、8、10
 
i = 1
while 1:            # 循环条件为1必定成立
    print i         # 输出1~10
    i += 1
    if i > 10:     # 当i大于10时跳出循环
        break
...
...
import random
while 1:
    s = int(random.randint(1, 3))
    if s == 1:
        ind = "石头"
    elif s == 2:
        ind = "剪子"
    elif s == 3:
        ind = "布"
    m = input('输入 石头、剪子、布,输入"end"结束游戏:')
    blist = ['石头', "剪子", "布"]
    if (m not in blist) and (m != 'end'):
        print ("输入错误，请重新输入！")
    elif (m not in blist) and (m == 'end'):
        print ("\n游戏退出中...")
        break
    elif m == ind :
        print ("电脑出了： " + ind + "，平局！")
    elif (m == '石头' and ind =='剪子') or (m == '剪子' and ind =='布') or (m == '布' and ind =='石头'):
        print ("电脑出了： " + ind +"，你赢了！")
    elif (m == '石头' and ind =='布') or (m == '剪子' and ind =='石头') or (m == '布' and ind =='剪子'):
        print ("电脑出了： " + ind +"，你输了！")
...

## Python for 循环语句
Python for循环可以遍历任何序列的项目，如一个列表或者一个字符串。
for循环的语法格式如下：
...
   for iterating_var in sequence:
      statements(s)
...
在 python 中，for … else 表示这样的意思，for 中的语句和普通的没有区别，
else 中的语句会在循环正常执行完（即 for 不是通过 break 跳出而中断的）的情况下执行，
while … else 也是一样。
...
width = int(input('输入对角线长度： '))
for row in range(width + 1):
    for col in range(width + 1):
        if ((abs(row - width/2) + abs(col - width/2)) == width/2):
            print ("*"),
        else:
            print (" "),
    print (" ")
...

## Python 循环嵌套
Python 语言允许在一个循环体里面嵌入另一个循环。
1.Python for 循环嵌套语法：
...
for iterating_var in sequence:
   for iterating_var in sequence:
      statements(s)
   statements(s)
...
2.Python while 循环嵌套语法：
...
while expression:
   while expression:
      statement(s)
   statement(s)
...
可以在循环体内嵌入其他的循环体，如在while循环中可以嵌入for循环， 反之，你可以在for循环中嵌入while循环。

## Python break 语句
Python break语句，就像在C语言中，打破了最小封闭for或while循环。
break语句用来终止循环语句，即循环条件没有False条件或者序列还没被完全递归完，也会停止执行循环语句。
break语句用在while和for循环中。
如果您使用嵌套循环，break语句将停止执行最深层的循环，并开始执行下一行代码。

## Python continue 语句
Python continue 语句跳出本次循环，而break跳出整个循环。
continue 语句用来告诉Python跳过当前循环的剩余语句，然后继续进行下一轮循环。
continue语句用在while和for循环中。

## Python pass 语句
Python pass是空语句，是为了保持程序结构的完整性。
pass 不做任何事情，一般用做占位语句。





