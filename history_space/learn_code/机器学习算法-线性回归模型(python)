#--------------------------------------------------
import pandas as pd
import numpy as np
from sklearn.cross_validation import train_test_split
import warnings
warnings.filterwarnings('ignore')

#--------------------------------------------------
# 读取数据
dat = pd.read_excel('C:/Users/Administrator.USER-20161208UW/Desktop/SDK/data/成绩数据.xlsx',sheetname=0)
# 修改列名
#df.columns = ['A','B']；df.rename(columns={'a':'A'})
dat.columns = ['bh','name','class','school','dili','lishi','shengwu','shuxue','zhengzhi','wuli','yingyu','yuwen','total']
# 数据预处理
dat = dat.dropna(axis=0)  # 删除缺失值数据
temp = dat.iloc[:,4:13].apply(lambda x: (x-min(x))/(max(x)-min(x))) # 数据归一化处理
dat.iloc[:,4:13] = temp 
# 样本抽取
#DataFrame.sample(n=None, frac=None, replace=False, weights=None, random_state=None, axis=None)
dat_train, dat_test= train_test_split(dat, test_size=0.33, random_state=42)
# dat.tail(5)

#--------------------------------------------------
# 建立线性回归模型(多元线性回归模型)(完全进入)
from statsmodels.formula.api import ols
fun_lm = ols('total ~ lishi+yuwen+shuxue+yingyu',data=dat_train).fit()
# 模型结果检验
#fun_lm.summary()   # 检验结果R，AIC，BIC, CANNSHU, JB 等
# 拟合结果
#fun_lm.predict(dat_test['lishi']) 预测结果
pre_dat = pd.DataFrame([dat_train['total'],fun_lm.predict(dat_train[['lishi','yuwen','shuxue','yingyu']]),fun_lm.resid],index=['total','predict','resid']).T
pre_dat.head(1)

#--------------------------------------------------
# 创建数据集，其中矩阵X表示特征值，向量y表示所属类目标记值
import numpy as np
from sklearn.cross_validation import train_test_split
from sklearn.linear_model import LinearRegression
# 利用线性回归模型对数据进行拟合
lr=LinearRegression(normalize=True)
fun_lm = lr.fit(dat_train[['lishi','yuwen','shuxue','yingyu']],dat_train['total'])
# 对测试集数据预测
y_pred = pd.DataFrame(lr.predict(dat_test[['lishi','yuwen','shuxue','yingyu']]))
y_pred.index = dat_test['total'].index
pre_dat = pd.DataFrame([dat_test['total'],y_pred.iloc[:,0]],index=['total','predict']).T
pre_dat.head(5) 
# 评估模型
from sklearn.metrics import mean_absolute_error
mean_absolute_error(dat_train['total'], y_pred)
print(fun_lm);print(lr.coef_);print(lr.fit)
# 交叉验证         #？？？？？？？？？？？？？？？？？？
#from sklearn.cross_validation import cross_val_score
#print(cross_val_score(knn, X_train, y_train, cv=4))
#print(cross_cal_score(lr, X, y, cv=2))

