pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
options(4)
return(ks)
}
ks_fun(dat_p)
ks_fun <- function(dat_p){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
return(ks)
}
ks_fun(dat_p)
ks_fun <- function(dat_p){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_fun(dat_p)
ks_fun <- function(dat_p){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks <- ks_fun(dat_p)
ks_fun <- function(dat_p){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
return(ks)
}
Q
ks_fun <- function(dat_p){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
return(ks)
}
dat_p <- read.csv('C:\\Users\\SDK\\Desktop\\华道0_1.csv',head=T)
head(dat_p)
ks <- ks_fun(dat_p)
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
ks
ks_fun <- function(dat_p){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
dat <- read.csv('C:\\Users\\SDK\\Desktop\\华道0_1.csv',head=T)
ks <- ks_fun(dat)
ks
ks_dat_pc <- function(dat_p){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(0,1,0.05))
cut_1 <- cut(pred1[,1], breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks <- ks_dat_pc(dat)
ks
ks_pc <- function(pre,class){
pred0 <- pre[which(class==0),]
pred1 <- pre[which(class==1),]
cut_0 <- cut(pred0, breaks = seq(0,1,0.05))
cut_1 <- cut(pred1, breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
pre <- dat[,1]
class1 <- dat[,2]
ks_pc(pre,class1)
which(class==1)
class1
class <- dat[,2]
which(class==1)
pre[which(class==1),]
pre[which(class==0)]
ks_pc <- function(pre,class){
pred0 <- pre[which(class==0)]
pred1 <- pre[which(class==1)]
cut_0 <- cut(pred0, breaks = seq(0,1,0.05))
cut_1 <- cut(pred1, breaks = seq(0,1,0.05))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_pc(pre,class1)
ks_dat_pc <- function(dat_p,low=0,high=1,by=0.05){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(low,high,by))
cut_1 <- cut(pred1[,1], breaks = seq(low,high,by))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_pc <- function(pre,class,low=0,high=1,by=0.05){
pred0 <- pre[which(class==0)]
pred1 <- pre[which(class==1)]
cut_0 <- cut(pred0, breaks = seq(low,high,by))
cut_1 <- cut(pred1, breaks = seq(low,high,by))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_pc(pre,class1)
ks_dat_pc(dat)
ks_pc(pre,class1,0.1,0.9,0.05)
ks_pc(pre,class1,-0.1,1.9,0.05)
ks_pc(pre,class1,-0.1,1.9,0.05)
dat <- read.csv('C:\\Users\\SDK\\Desktop\\华道0_1.csv',head=T)
pre <- dat[,1]
class <- dat[,2]
head(dat)
ks_dat_pc <- function(dat_p,low=0,high=1,by=0.05){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(low,high,by))
cut_1 <- cut(pred1[,1], breaks = seq(low,high,by))
ks <- data.frame()
ks[1:20,1] <- levels(cut_0)
for(i in 1:20){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:20){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_dat_pc(dat)
ks_dat_pc(dat,-0.1,1.9,0.05)
length(levels(cut_0))
dat_p <- dat
dat_p <- dat
dat_p
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(low,high,by))
low=0,high=1,by=0.05
low=0
high=1
by=0.05
cut_0 <- cut(pred0[,1], breaks = seq(low,high,by))
cut_1 <- cut(pred1[,1], breaks = seq(low,high,by))
ks[1:20,1] <- levels(cut_0)
levels(cut_0)
length(levels(cut_0))
ks_dat_pc <- function(dat_p,low=0,high=1,by=0.05){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(low,high,by))
cut_1 <- cut(pred1[,1], breaks = seq(low,high,by))
ks <- data.frame()
ks[1:length(levels(cut_0)),1] <- levels(cut_0)
for(i in 1:length(levels(cut_0))){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:length(levels(cut_0))){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_pc <- function(pre,class,low=0,high=1,by=0.05){
pred0 <- pre[which(class==0)]
pred1 <- pre[which(class==1)]
cut_0 <- cut(pred0, breaks = seq(low,high,by))
cut_1 <- cut(pred1, breaks = seq(low,high,by))
ks <- data.frame()
ks[1:length(levels(cut_0)),1] <- levels(cut_0)
for(i in 1:length(levels(cut_0))){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:length(levels(cut_0))){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_pc(pre,class,-0.1,1.9,0.05)
ks_dat_pc(dat,-0.1,1.9,0.05)
ks_pc(pre,class)
ks_dat_pc(dat)
package.skeleton()
ks_dat_pc <- function(dat_p,low=0,high=1,by=0.05){
pred0 <- dat_p[which(dat_p[,2]==0),]
pred1 <- dat_p[which(dat_p[,2]==1),]
cut_0 <- cut(pred0[,1], breaks = seq(low,high,by))
cut_1 <- cut(pred1[,1], breaks = seq(low,high,by))
ks <- data.frame()
ks[1:length(levels(cut_0)),1] <- levels(cut_0)
for(i in 1:length(levels(cut_0))){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:length(levels(cut_0))){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
ks_pc <- function(pre,class,low=0,high=1,by=0.05){
pred0 <- pre[which(class==0)]
pred1 <- pre[which(class==1)]
cut_0 <- cut(pred0, breaks = seq(low,high,by))
cut_1 <- cut(pred1, breaks = seq(low,high,by))
ks <- data.frame()
ks[1:length(levels(cut_0)),1] <- levels(cut_0)
for(i in 1:length(levels(cut_0))){  ks[i,2] <- table(cut_0)[[i]]  }
for(i in 1:length(levels(cut_0))){  ks[i,3] <- table(cut_1)[[i]]  }
ks[,4] <- cumsum(table(cut_0))/sum(ks$V2)
ks[,5] <- cumsum(table(cut_1))/sum(ks$V3)
ks[,6] <- ks[,4] - ks[,5]
colnames(ks) <- c('section','bad_0','good_1','add_bad_0','add_good_1','ks_value')
return(ks)
}
package.skeleton()
rm(list=ls())
rm(list=ls())
package.skeleton(name="ks",
code_files="ks.R")
library(ks)
library(ks)
rm(list=ls())
package.skeleton(name="ks",
code_files="ks.R")
rm(list=ls())
setwd("E:\rspace")
rm(list=ls())
setwd("E:\rspace")
setwd("E:\\rspace")
package.skeleton(name="ks",
code_files="ks.R")
library(ks)
install.packages('ks')
myks<-function(y,predict_y){
library(ROCR)
pred <- prediction(predictions=predict_y,labels=y)
perf <- performance(pred,"tpr","fpr")
tmp<-max(attr(perf,"y.values")[[1]]-attr(perf,"x.values")[[1]])
return(tmp)}
install.packages('E:\\rspace\\ks')
install.packages('E:\\rspace\\ks')
library(ks)
library(ks)
library(ks)
ks_dat_pc()
library(ks_s)
install.packages(ks_s)
install.packages('E:\\rspace\\ks_1.0.tar.gz',repos = NULL, type = 'source')
library('ks')
library('ks_s')
install.packages('rvest')
library(rvest)
# 指定要爬取的url
url <- 'https://shop159496435.taobao.com/category.htm?
spm=a1z10.3-c-s.w4010-14311566384.2.2ab1306cs6
CsRX&search=y'
# 从网页读取html代码
webpage <- read_html(url)
webpage
install.packages('XML')
library(XML)
url <- "http://data.earthquake.cn/datashare/datashare_more_quickdata_new.jsp" # 中文界面，抓出来是乱码
url <- "http://219.143.71.11/wdc4seis@bj/earthquakes/csn_quakes_p001.jsp" # 英文界面，抓出来是对的
wp <- getURL(url)
wp <- getURL(url)
wp <- getURL(url)
doc <-htmlParse(wp, asText = TRUE) # 这里切记encoding
library(XML)
url <- "http://data.earthquake.cn/datashare/datashare_more_quickdata_new.jsp" # 中文界面，抓出来是乱码
url <- "http://219.143.71.11/wdc4seis@bj/earthquakes/csn_quakes_p001.jsp" # 英文界面，抓出来是对的
wp <- getURL(url)
wp <- getRelativeURL(url)
doc <-htmlParse(wp, asText = TRUE) # 这里切记encoding
tables <- readHTMLTable(doc, header=F, which = 2)
doc
url <- "http://219.143.71.11/wdc4seis@bj/earthquakes/csn_quakes_p001.jsp" # 英文界面，抓出来是对的
wp <- getRelativeURL(url)
doc <-htmlParse(wp, asText = TRUE) # 这里切记encoding
tables
library(plyr)
library(XML)
library(RCurl)
install.packages('RCurl')
library(RCurl);library(XML);library(plyr)
myheader=c("User-Agent"="Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) ",
"Accept"="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
"Accept-Language"="en-us",
"Connection"="keep-alive",
"Accept-Charset"="GB2312,utf-8;q=0.7,*;q=0.7"
)
webpage = getURL('https://item.jd.com/12107414.html#comments-list',httpheader=myheader,.encoding='utf-8')
pagetree = htmlParse(webpage,encoding='utf-8')
comment = xpathSApply(pagetree,"//div[@class='comment-content']",xmlValue)
comment = iconv(comment,"utf-8","LATIN1")
comment
library(RCurl)
getcoments <- function(i){
productid <- '2967929'  #商品id
t1 <- 'http://club.jd.com/comment/productPageComments.action?productId='
t2 <- '&score=0&sortType=1&page='  #按时间顺序
t3 <- '&pageSize=1' #设置每页1条评论
url <-paste0(t1,productid,t2,i,t3)
web <- getURL(url, .encoding = 'gbk')
comments <- substr(web,regexpr("comments", web)+10,regexpr("referenceTime", web)-4)
content <- substr(comments,regexpr("content", comments)+10,regexpr("creationTime", comments)-4)
}
comment <- c()
n <- 30 #爬取评论条数
for(i in 0:(n-1)){
comment <- rbind(comment,getcoments(i))
print(i+1)
Sys.sleep(1)
}
write.csv(comment,'jingdongcomment.csv')
library(RCurl)
getcoments <- function(i){
productid <- '2967929'  #商品id
t1 <- 'http://club.jd.com/comment/productPageComments.action?productId='
t2 <- '&score=0&sortType=1&page='  #按时间顺序
t3 <- '&pageSize=1' #设置每页1条评论
url <-paste0(t1,productid,t2,i,t3)
web <- getURL(url, .encoding = 'gbk')
comments <- substr(web,regexpr("comments", web)+10,regexpr("referenceTime", web)-4)
content <- substr(comments,regexpr("content", comments)+10,regexpr("creationTime", comments)-4)
}
comment <- c()
n <- 30 #爬取评论条数
for(i in 0:(n-1)){
comment <- rbind(comment,getcoments(i))
print(i+1)
Sys.sleep(1)
}
comment
comment
library(RCurl)
getcoments <- function(i){
productid <- '2967929'  #商品id
t1 <- 'http://club.jd.com/comment/productPageComments.action?productId='
t2 <- '&score=0&sortType=1&page='  #按时间顺序
t3 <- '&pageSize=1' #设置每页1条评论
url <-paste0(t1,productid,t2,i,t3)
web <- getURL(url, .encoding = 'gbk')
comments <- substr(web,regexpr("comments", web)+10,regexpr("referenceTime", web)-4)
content <- substr(comments,regexpr("content", comments)+10,regexpr("creationTime", comments)-4)
}
comment <- c()
n <- 30 #爬取评论条数
for(i in 0:(n-1)){
comment <- rbind(comment,getcoments(i))
print(i+1)
Sys.sleep(1)
}
comment
getcoments <- function(i){
productid <- '2967929'  #商品id
t1 <- 'http://club.jd.com/comment/productPageComments.action?productId='
t2 <- '&score=0&sortType=1&page='  #按时间顺序
t3 <- '&pageSize=1' #设置每页1条评论
url <-paste0(t1,productid,t2,i,t3)
web <- getURL(url, .encoding = 'gbk')
comments <- substr(web,regexpr("comments", web)+10,regexpr("referenceTime", web)-4)
content <- substr(comments,regexpr("content", comments)+10,regexpr("creationTime", comments)-4)
}
comment <- c()
n <- 30 #爬取评论条数
for(i in 0:(n-1)){
comment <- rbind(comment,getcoments(i))
print(i+1)
Sys.sleep(1)
}
comment
df <- read.csv('C:\\Users\\SDK\\Desktop\\xinyan_model.csv')
head(df)
nrow(df)
df[6,6]
df[which(df[6,6] = -99999976,]
df[which(df[6,6] = -99999976,6]
which(df[6,6] = -99999976
for(i in 4:40){
for (j in 1:nrow(df)) {
df[which(df[j,i] = -99999976,] = 'NA'
}
}
which(df[j,i] = -99999976)
which(df[j,i] == -99999976)
which(df[6,6] == -99999976)
for(i in 4:40){
for (j in 1:nrow(df)) {
df[which(df[j,i] == -99999976),] = 'NA'
}
}
which(df[6,6] == -99999976)
which(df[,6] == -99999976)
df[which(df[,6] == -99999976),1]
for(i in 4:40){
df[which(df[,i] == -99999976),] = 'NA'
}
df
fix(df)
df_1 <- na.omit(df)
fix(df_1)
df <- read.csv('C:\\Users\\SDK\\Desktop\\xinyan_model.csv')
str(df)
for(i in 4:40){
df[which(df[,i] == -99999976),] = 'NA'
}
str(df)
df_1 <- na.omit(df)
str(df_1)
nrow(df)
df <- read.csv('C:\\Users\\SDK\\Desktop\\xinyan_model.csv')
nrow(df)
for(i in 4:40){
df[which(df[,i] == -99999976),] = 'NA'
}
df_1 <- na.omit(df)
nrow(df_1)
write.csv(df_1,'C:\\Users\\SDK\\Desktop\\xinyan_model_1.csv')
