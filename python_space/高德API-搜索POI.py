
# -*- coding: utf-8 -*-
"""
时间：2019-10-13
作者: zuoshao（佐少）
代码说明：高德API-搜索POI
搜索POI包括：1、关键字搜索，2、周边搜索，3、多边形搜索，4、ID查询
"""

# ######################################################################################################################
# 高德地图之python爬取POI数据及其边界经纬度(根据关键字在城市范围内搜索)
# ######################################################################################################################
'''
由于之前项目需要从高德地图上爬取一个地方的不同分类数据，所以初学了一下爬虫，
也了解了一些高德地图提供的web API用来获取免费的地图数据。
项目的需求是爬取一个地方的七个分类数据， 包括大学、景点、酒店等等，其中一条数据叫作一个POI。
需要的poi点的字段包括：poi点id、名称name、位置(经纬度)location、所属省名称pname、所属省编号pcode、
所属城市名称cityname、所属城市编号citycode、所属区名称adname、所属区编号adcode、所在地址address、
所属类别type、边界经纬度。

步骤说明
1. 申请账号
2. 确定api查询的地址：
查找高德地图提供的web api下的搜索模块，http://lbs.amap.com/api/webservice/guide/api/search 
使用关键字搜索服务,关键字搜索API的服务地址：http://restapi.amap.com/v3/place/text?parameters
3. API提供的参数说明
4. 根据获取到的POI数据的id获取其边界经纬度
'''

# ######################################################################################################################
# 1、关键字搜索
# ######################################################################################################################

# 指定城市和关键字，拉取高德API数据~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
def get_search_key(cityname='南京', keywords='东升村', page=1):

    # 导入所需要的模块~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    from urllib.parse import quote
    import pandas as pd
    import requests

    # 高德API请求信息设置~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # cityname = '南京', keywords='东升村', page=1
    key = '5a96233309dba9e376adfdae45a02c0a'
    poi_search_url = "http://restapi.amap.com/v3/place/text"
    req_url = poi_search_url + "?key=" + key + '&keywords=' + quote(keywords) + '&city=' + quote(cityname) + \
               '&page=' + str(page) + '& citylimit=true & offset=25 & extensions=all & output=json'

    # 高德API数据请求并解析~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # 访问链接后，api会回传给一个json格式的数据
    data = requests.get(req_url)
    data = data.json()
    data = data['pois']

    # 请求返回信息解析并提取相关的信息~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    name_list = ['id', 'name', 'type', 'typecode', 'address', 'pname', 'cityname', 'adname']
    df_data = pd.DataFrame(columns=name_list)

    for name in name_list:
        df_data[name] = [li[name] for li in data]

    # 函数返回结果~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    return df_data


# ######################################################################################################################
# 2、周边搜索
# ######################################################################################################################

# 指定中心坐标、关键字，拉取高德API数据（周边服务数据）~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
def get_search_around(location='116.481488,39.990464', keywords='充电站', page=1):

    # 导入所需要的模块~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    from urllib.parse import quote
    import pandas as pd
    import requests

    # 高德API请求信息设置~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # cityname = '南京', keywords='东升村', page=1
    key = '5a96233309dba9e376adfdae45a02c0a'
    poi_search_url = "http://restapi.amap.com/v3/place/around"
    req_url = poi_search_url + "?key=" + key + '&keywords=' + quote(keywords) + '&location=' + quote(location) + \
               '&page=' + str(page) + '& types=011100 & radius=1000 & offset=20 & extensions=all'

    # 高德API数据请求并解析~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # 访问链接后，api会回传给一个json格式的数据
    data = requests.get(req_url)
    data = data.json()
    data = data['pois']

    # 请求返回信息解析并提取相关的信息~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    name_list = ['id', 'name', 'type', 'typecode', 'address', 'location', 'tel', 'pname',
                 'cityname', 'adname', 'distance']
    df_data = pd.DataFrame(columns=name_list)

    for name in name_list:
        df_data[name] = [str(li[name]) for li in data]

    # 函数返回结果~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    return df_data

# ######################################################################################################################
# 3、多边形搜索
# ######################################################################################################################

# 指定中心坐标、关键字，拉取高德API数据（周边服务数据）~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
def get_search_around(polygon='116.460988,40.006919|116.48231,40.007381;116.47516,39.99713|116.472596,39.985227|116.45669,39.984989|116.460988,40.006919',
                      keywords='肯德基', page=1):

    # 导入所需要的模块~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    from urllib.parse import quote
    import pandas as pd
    import requests

    # 高德API请求信息设置~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # cityname = '南京', keywords='东升村', page=1
    key = '5a96233309dba9e376adfdae45a02c0a'
    poi_search_url = "https://restapi.amap.com/v3/place/polygon"
    req_url = poi_search_url + "?key=" + key + '&keywords=' + quote(keywords) + '&polygon=' + quote(polygon) + \
               '&page=' + str(page) + '&types=050301&offset=20&extensions=all'

    # 高德API数据请求并解析~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # 访问链接后，api会回传给一个json格式的数据
    data = requests.get(req_url)
    data = data.json()
    data = data['pois']

    # 请求返回信息解析并提取相关的信息~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    name_list = ['id', 'name', 'tag', 'type', 'typecode', 'biz_type', 'address', 'location',
                 'tel', 'pname', 'cityname', 'adname']
    df_data = pd.DataFrame(columns=name_list)

    for name in name_list:
        df_data[name] = [str(li[name]) for li in data]

    # 函数返回结果~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    return df_data

# ######################################################################################################################
# 4、ID查询
# ######################################################################################################################

# ID查询（兴趣点ID查询），根据id获取边界数据~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
def get_search_id(id='B0FFFAB6J2'):

    # 导入所需要的模块~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    import pandas as pd
    import requests

    # 高德API请求信息设置~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    poi_boundary_url = "https://restapi.amap.com/v3/place/detail"
    key = '5a96233309dba9e376adfdae45a02c0a'
    req_url = poi_boundary_url + "?id=" + id + '&key=' + key

    # 高德API数据请求并解析~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # 访问链接后，api会回传给一个json格式的数据
    data = requests.get(req_url)
    data = data.json()
    data = data['pois']

    # 请求返回信息解析并提取相关的信息~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    name_list = ['id', 'name', 'type', 'typecode', 'address', 'location', 'pname', 'cityname', 'adname', 'business_area']
    df_data = pd.DataFrame(columns=name_list)

    for name in name_list:
        df_data[name] = [str(li[name]) for li in data]

    # 函数返回结果~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    return df_data

# ######################################################################################################################
# 主函数
# ######################################################################################################################

# 主函数~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if __name__ == '__main__':
    df_search_id = get_search_id(id='B0FFFAB6J2')
    df_search_key = get_search_key(cityname='南京', keywords='东升村', page=1)
    df_search_around = get_search_around(location='116.481488,39.990464', keywords='充电站', page=1)
    get_search_around(
        polygon='116.460988,40.006919|116.48231,40.007381;116.47516,39.99713|116.472596,39.985227|116.45669,39.984989|116.460988,40.006919',
        keywords='肯德基', page=1)

